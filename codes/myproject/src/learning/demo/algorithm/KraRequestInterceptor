package com.xykj.koala.context;

import lombok.extern.slf4j.Slf4j;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.util.Objects;

import static java.util.Objects.nonNull;
import static org.assertj.core.util.Strings.isNullOrEmpty;

/**
 * @author liuzhihao
 * @date 2018/6/3
 */
@Slf4j
public class KraRequestInterceptor extends HandlerInterceptorAdapter {

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
            throws Exception {
        String requestId = request.getHeader("request-id");
        if (isNullOrEmpty(requestId)) {
            log.info("Interceptor refused request.");
            return false;
        }

        KraContext.clear();
        KraContext.setRequestId(requestId);

        String userId = request.getHeader("user-id");
        if (nonNull(userId)) {
            KraContext.setUserId(Long.valueOf(userId));
        }

        log.debug("interceptor.user.id => {}", userId);
        return super.preHandle(request, response, handler);
    }
}
