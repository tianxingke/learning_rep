设计模式
23
--创建型模式：
单例模式、工厂模式、抽象工厂模式、建造者模式、原型模式。

--结构型模式
适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式。


--行为型模式
模板方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链模式、访问者模式。

http://www.icoolxue.com/play/5511



一、单例模式
作用：保证一个类只有一个实例，并且提供一个访问该实例的全局访问点。

常见应用场景：
-win 任务管理器
-项目中，读取配置文件的类，一般只有一个对象。
-网站的计数器，一般也是单例实现，否则难以同步。
-应用程序的日志应用，
-数据库连接池的设计一般也是单例，节省资源
-application
-spring中bean默认单例
-servlet
-springMVC中，控制器对象也是单例


优点：
只有一个实例，资源占用少

常见的五种单例模式实现方式：
-主要：
	饿汉式（线程安全，调用效率高。但是不能延迟加载）
	懒汉式（线程安全，调用效率不高，但是可以延迟加载）
-其他
	双重检测锁式（由于JVM底层内部模型原因，偶尔会出问题，不建议使用）
	静态内部类式（线程安全，调用效率高，但不能延迟加载）
	枚举单例（线程安全，调用效率高，不能延迟加载）













































































