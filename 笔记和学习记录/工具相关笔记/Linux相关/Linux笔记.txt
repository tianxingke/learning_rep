					第一部分：Linux常用命令
一、
1.查看用户：who am i。
	要查看当前登录用户的用户名，去掉空格直接使用 whoami 即可。

	who 命令其它常用参数

	参数	说明
	-a	打印能打印的全部
	-d	打印死掉的进程
	-m	同am i,mom likes
	-q	打印当前登录用户数及用户名
	-u	打印当前登录用户登录信息
	-r	打印运行等级

2.创建用户
	su，su- 与 sudo
	su <user>可以切换到用户user，执行时需要输入目标用户的密码
	su - <user>命令也是切换用户，同时环境变量也会跟着改变成目标用户的环境变量。
	sudo <cmd>可以以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入当前用户密码。通过sudo，我们能把某些超级权限有针对性的下放，并且不需要普通用户知道root密码

	id 注：查看当前用户信息；

	$ sudo adduser lilei  新建用户，这个命令不但可以添加用户到系统，同时也会默认为新用户创建 home 目录

3.组
	查看自己属于哪些组
	方法一：groups <用户>
	方法二：cat /etc/group | sort
	/etc/group 的内容包括用户组（Group）、用户组口令、GID 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：
	group_name:password:GID:user_list
	你看到上面的 password 字段为一个 'x' 并不是说密码就是它，只是表示密码不可见而已。

	| sort 表示将读取的文本进行一个字典排序再输出

	将其它用户加入 sudo 用户组:
	使用 usermod 命令可以为用户添加用户组:  sudo usermod -G sudo lilei
	删除用户是很简单的事:sudo deluser lilei --remove-home

	默认情况下新创建的用户是不具有 root 权限的，也不在 sudo 用户组，可以让其加入sudo用户组从而获取 root 权限。


	更改文件的用户组：



4.文件
	一个目录要同时具有读权限和执行权限才可以打开，而一个目录要有写权限才允许在其中创建其它文件，这是因为目录文件实际保存着该目录里面的文件的列表等信息
	
	你可以给 ls 加上 -lh 参数来更直观的查看文件的大小。
	查看某一个目录的完整属性，而不是显示目录里面的文件属性：$ ls -dl <目录名>
	
	显示所有文件大小，并以普通人类能看懂的方式呈现：$ ls -AsSh    
	其中小 s 为显示文件大小，大 S 为按文件大小排序

	变更文件所有者为shiyanlou ：$ sudo chown shiyanlou iphone6
	
	修改文件权限：$ chmod 700 <文件>
	使某个文件夹下的文件都改变权限：chmod  777 zookeeper/ -R

	文件系统目录结构图：http://img.blog.csdn.net/20160803142833010?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center

	- 表示上一次所在目录  如： cd - 进入上次的文件目录


	文件操作
	新建：touch <文件名>  命令创建空白文件（不会覆盖已有同名文件）
	新建目录：mkdir <目录名>        
	使用 -p 参数，同时创建父目录（如果不存在该父目录）:$ mkdir -p father/son/grandson

	复制：复制一个文件或目录到指定目录。
	例子将之前创建的"test"文件复制到"/home/shiyanlou/father/son/grandson"目录中：$ cp test father/son/grandson
		-a 尽可能将档案状态、权限等资料都照原状予以复制。
		-r 若 source 中含有目录名，则将目录下之档案亦皆依序拷贝至目的地。
		-f 若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。
	要成功复制目录需要加上-r或者-R参数，表示递归复制：$ cp -r father family

	scp
	scp是有Security的文件copy，基于ssh登录。操作起来比较方便，比如要把当前一个文件copy到远程另外一台主机上，可以如下命令。
	scp /home/daisy/full.tar.gz root@172.19.2.75:/home/root
	然后会提示你输入另外那台172.19.2.75主机的root用户的登录密码，接着就开始copy了。
	如果想反过来操作，把文件从远程主机copy到当前系统，也很简单。
	scp root@/full.tar.gz 172.19.2.75:/home/root/full.tar.gz home/daisy/full.tar.gz
	注意两点：
		1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：
		#scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator
		2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。


	删除：可以使用-f参数强制删除文件   $ rm -f test
	跟复制目录一样，要删除一个目录，也需要加上-r或-R参数：$ rm -r family

	移动、重命名
	移动：mv 源目录文件 目的目录
	将文件"file1"重命名为"myfile"： mv 旧的文件名 新的文件名
	rename可以批量重命名

	查看文件
	cat <文件>
	可以加上-n参数显示行号
	nl命令，添加行号并打印，这是个比cat -n更专业的行号打印命令。cat -n nl t.txt

	查看文件类型
	file <文件>

	mkdir -p d1/d2/d3    创建多级目录

5.环境变量
	使用declare命令创建一个变量名为 tmp 的变量：$ declare tmp  或者直接赋值也可以。
	读取变量使用echo $tmp
	
	通常我们会涉及到的环境变量有三种：
	当前 Shell 进程私有用户自定义变量，如上面我们创建的 temp 变量，只在当前 Shell 中有效。
	Shell 本身内建的变量。
	从自定义变量导出的环境变量。
	也有三个与上述三种环境变量相关的命令，set，env，export。这三个命令很相似，都可以用于打印相关环境变量,区别在于涉及的是不同范围的环境变量，详见下表：
	命令	说明
	set	显示当前 Shell 所有环境变量，包括其内建环境变量（与 Shell 外观等相关），用户自定义变量及导出的环境变量
	env	显示与当前用户相关的环境变量，还可以让命令在指定环境中运行
	export	显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量


	变量修改

	变量的修改有以下几种方式：
	变量设置方式	说明
	${变量名#匹配字串}	从头向后开始匹配，删除符合匹配字串的最短数据
	${变量名##匹配字串}	从头向后开始匹配，删除符合匹配字串的最长数据
	${变量名%匹配字串}	从尾向前开始匹配，删除符合匹配字串的最短数据
	${变量名%%匹配字串}	从尾向前开始匹配，删除符合匹配字串的最长数据
	${变量名/旧的字串/新的字串}	将符合旧字串的第一个字串替换为新的字串
	${变量名//旧的字串/新的字串}	将符合旧字串的全部字串替换为新的字串
	比如要修改我们前面添加到 PATH 的环境变量。为了避免操作失误导致命令找不到，我们先将 PATH 赋值给一个新的自定义变量 path：

	$ path=$PATH
	$ echo $path
	$ path=${path%/home/shiyanlou/mybin}
	# 或使用通配符,*表示任意多个任意字符
	$ path=${path%*/mybin}

6.搜索文件
	whereis
	这个搜索很快，因为它并没有从硬盘中依次查找，而是直接从数据库中查询。whereis只能搜索二进制文件(-b)，man帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可以使用locate命令。

	locate
	通过"/var/lib/mlocate/mlocate.db"数据库查找，不过这个数据库也不是实时更新的，系统会使用定时任务每天自动执行updatedb命令更新一次，所以有时候你刚添加的文件，它可能会找不到，需要手动执行一次updatedb命令（在我们的环境中必须先执行一次该命令）。它可以用来查找指定目录下的不同文件类型，如查找 /etc 下所有以 sh 开头的文件：
	$ locate /etc/sh
	注意,它不只是在 etc 目录下查找并会自动递归子目录进行查找
	
	which
	which本身是 Shell 内建的一个命令，我们通常使用which来确定是否安装了某个指定的软件，因为它只从PATH环境变量指定的路径中去搜索命令：
	$ which man
	
	find
	它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳，文件的权限等）进行搜索。
	在指定目录下搜索指定文件名的文件：$ find /etc/ -name interfaces
	
	与时间相关的命令参数：
	参数	说明
	-atime	最后访问时间
	-ctime	创建时间
	-mtime	最后修改时间
	
	下面以-mtime参数举例：
	-mtime n: n 为数字，表示为在n天之前的”一天之内“修改过的文件
	-mtime +n: 列出在n天之前（不包含n天本身）被修改过的文件
	-mtime -n: 列出在n天之内（包含n天本身）被修改过的文件
	newer file: file为一个已存在的文件，列出比file还要新的文件名
	
	列出 home 目录中，当天（24 小时之内）有改动的文件：$ find ~ -mtime 0
	列出用户家目录下比Code文件夹新的文件：$ find ~ -newer /home/shiyanlou/Code

7.文件打包与压缩
	文件后缀名	说明
	*.zip	zip程序打包压缩的文件
	*.rar	rar程序压缩的文件
	*.7z	7zip程序压缩的文件
	*.tar	tar程序打包，未压缩的文件
	*.gz	gzip程序(GNU zip)压缩的文件
	*.xz	xz程序压缩的文件
	*.bz2	bzip2程序压缩的文件
	*.tar.gz	tar打包，gzip程序压缩的文件
	*.tar.xz	tar打包，xz程序压缩的文件
	*tar.bz2	tar打包，bzip2程序压缩的文件
	*.tar.7z	tar打包，7z程序压缩的文件

	我们一般只需要掌握几个命令即可，包括zip,rar,tar。
	
	a).使用zip打包文件夹：
	
		$ zip -r -q -o shiyanlou.zip /home/shiyanlou
		$ du -h shiyanlou.zip
		$ file shiyanlou.zip
		上面命令将 shiyanlou 的 home 目录打包成一个文件，并查看了打包后文件的大小和类型。
		第一行命令中，-r参数表示递归打包包含子目录的全部内容，-q参数表示为安静模式，即不向屏幕输出信息，-o，表示输出文件，需在其后紧跟打包输出文件名。
		后面使用du命令查看打包后文件的大小。

		设置压缩级别为9和1（9最大,1最小），重新打包：
		$ zip -r -9 -q -o shiyanlou_9.zip /home/shiyanlou -x ~/*.zip
		$ zip -r -1 -q -o shiyanlou_1.zip /home/shiyanlou -x ~/*.zip
		这里添加了一个参数用于设置压缩级别-[1-9]，1表示最快压缩但体积大，9表示体积最小但耗时最久。
		最后那个-x是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中。
		注意:这里只能使用绝对路径，否则不起作用。

		我们再用du命令分别查看默认压缩级别、最低、最高压缩级别及未压缩的文件的大小：
		$ du -h -d 0 *.zip ~ | sort

		创建加密zip包
		使用-e参数可以创建加密压缩包：$ zip -r -e -o shiyanlou_encryption.zip /home/shiyanlou

		注意: 关于zip命令，如果你想让你在 Linux 创建的 zip 压缩文件在 Windows 上解压后没有任何换行符（CR ，LF）问题：
		$ zip -r -l -o shiyanlou.zip /home/shiyanlou   需要加上-l参数将LF转换为CR+LF来达到以上目的。




		使用unzip命令解压缩zip文件
		将shiyanlou.zip解压到当前目录：$ unzip shiyanlou.zip
		使用安静模式，将文件解压到指定目录：$ unzip -q shiyanlou.zip -d ziptest
		上述指定目录不存在，将会自动创建。如果你不想解压只想查看压缩包的内容你可以使用-l参数：$ unzip -l shiyanlou.zip

		注意： 使用unzip解压文件时我们同样应该注意中文编码的问题，通常 Windows 系统上面创建的压缩文件，如果有有包含中文的文档或以中文作为文件名的文件时默认会采用 GBK 或其它编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题（有时候它会自动帮你处理），为了解决这个问题，我们可以在解压时指定编码类型。
		使用-O（英文字母，大写o）参数指定编码类型：
		unzip -O GBK 中文压缩文件.zip

	b).rar打包压缩命令
		从指定文件或目录创建压缩包或添加文件到压缩包：$ rar a shiyanlou.rar .
		上面的命令使用a参数添加一个目录～到一个归档文件中，如果该文件不存在就会自动创建。
		注意：rar 的命令参数没有-，如果加上会报错。
		
		从指定压缩包文件中删除某个文件：$ rar d shiyanlou.rar .zshrc
		查看不解压文件：$ rar l shiyanlou.rar



		使用unrar解压rar文件
		全路径解压：$ unrar x shiyanlou.rar
		去掉路径解压：$ mkdir tmp   $ unrar e shiyanlou.rar tmp/

	c).tar打包工具
	创建一个 tar 包：$ tar -cf shiyanlou.tar ~
	上面命令中，-c表示创建一个 tar 包文件，-f用于指定创建的文件名，注意文件名必须紧跟在-f参数之后，比如不能写成tar -fc shiyanlou.tar，可以写成tar -f shiyanlou.tar -c ~。你还可以加上-v参数以可视的的方式输出打包的文件。上面会自动去掉表示绝对路径的/，你也可以使用-P保留绝对路径符。

	解包一个文件(-x参数)到指定路径的已存在目录(-C参数)：
	$ mkdir tardir
	$ tar -xf shiyanlou.tar -C tardir
	
	只查看不解包文件-t参数：
	$ tar -tf shiyanlou.tar

	保留文件属性和跟随链接（符号链接或软链接），有时候我们使用tar备份文件当你在其他主机还原时希望保留文件的属性(-p参数)和备份链接指向的源文件而不是链接本身(-h参数)：
	$ tar -cphf etc.tar /etc

	对于创建不同的压缩格式的文件，对于tar来说是相当简单的，需要的只是换一个参数，这里我们就以使用gzip工具创建*.tar.gz文件为例来说明。
	我们只需要在创建 tar 文件的基础上添加-z参数，使用gzip来压缩文件：
	$ tar -czf shiyanlou.tar.gz ~
	解压*.tar.gz文件：
	$ tar -xzf shiyanlou.tar.gz
	现在我们要使用其他的压缩工具创建或解压相应文件只需要更改一个参数即可：
	压缩文件格式	参数
	*.tar.gz	-z
	*.tar.xz	-J
	*tar.bz2	-j
	
8.文件系统和磁盘管理
	mount挂载：
	mount命令的一般格式如下：
	mount [options] [source] [directory]
	一些常用操作：
	mount [-o [操作选项]] [-t 文件系统类型] [-w|--rw|--ro] [文件系统源] [挂载点]
	我们现在直接来挂载我们创建的虚拟磁盘镜像到/mnt目录：
	$ mount -o loop -t ext4 virtual.img /mnt 
	# 也可以省略挂载类型，很多时候 mount 会自动识别
	# 以只读方式挂载
	$ mount -o loop --ro virtual.img /mnt
	# 或者mount -o loop,ro virtual.img /mnt

	使用 umount 命令卸载已挂载磁盘
	# 命令格式 sudo umount 已挂载设备名或者挂载点，如：
	$ sudo umount /mnt

9.Linux任务计划crontab

10.Linux软件安装
	你可以使用如下方式重新安装：
	$ sudo apt-get --reinstall install w3m

	# 更新软件源
	$ sudo apt-get update
	# 升级没有依赖问题的软件包
	$ sudo apt-get upgrade
	# 升级并解决依赖关系
	$ sudo apt-get dist-upgrade

	卸载sudo apt-get remove w3m


	Ubuntu安装rpm包：
	首先安装alien     sudo apt-get install alien
	1.然后 可以用alien将rpm包转换成deb包 sudo alien flash-plugin.i386.rpm  会在目录下生成同名的deb包 ，接着用sudo dpkg -i flash-plugin.i386.deb   命令安装即可。
	2. 也可以直接使用 sudo alien -i flash-plugin.i386.rpm 直接安装rpm包。


	Ubuntu 使用dpkg -l  可以看到已经安装的软件

	

11.Linux日志系统
	





















第二部分：Linux使用技巧
1.数字雨
	cmatrix
2.修改Linux系统语言
	#vi /etc/sysconfig/i18n 
	LANG="en_US.UTF-8" 

3.启动ssh服务
	service sshd start


















































