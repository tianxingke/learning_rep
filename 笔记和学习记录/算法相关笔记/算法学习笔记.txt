算法复杂度速查表：https://linux.cn/article-7480-1.html

一、排序
1.堆
	若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边，这就是完全二叉树。
	http://www.cnblogs.com/JVxie/p/4859889.html
	http://blog.csdn.net/genios/article/details/8157031

索引优先队列：http://www.cnblogs.com/bethunebtj/p/4856563.html

	堆排序：演示：https://upload.wikimedia.org/wikipedia/commons/4/4d/Heapsort-example.gif（不知对错）




二、查找





学习方法 
把所有经典算法写一遍 
看算法有关源码 
加入算法学习社区，相互鼓励学习 
看经典书籍 
刷题
作者： IT程序狮 
链接：http://www.imooc.com/article/3669
来源：慕课网


三、搜索树

深度为m的满二叉树有2^m-1个结点；
具有n个结点的完全二叉树的深度为[log2n]+1.（log2n是以2为底n的对数）


二叉搜索树：
	效率最差情况：所有元素有序，元素排成了一条线。要1+2+3+4+5+。。。。   要n2次
	平衡树时每个元素需要logn次，总的是nlogn。

和快速排序是相同的比较和时间复杂度，但比较的顺序不一样。

http://blog.jobbole.com/79305/

递归和非递归实现























